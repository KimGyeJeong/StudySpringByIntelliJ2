<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 시큐리티 설정파일 -->
    <!-- 최소한의 세팅이 있어야 에러가 발생하지 않음 -->

    <!-- 비밀번호 보호를 위한 암호화 클래스 빈 등록 -->
    <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

    <!-- 시큐리티에서 우리가 원하는 형태의 회원테이블로 처리되기 위한 클래스 빈으로 등록 -->
    <bean id="customUserDetailsService" class="com.security.service.CustomUserDetailsService"></bean>

    <!-- 접근 제한 설정 -->
    <security:http>
<!--  시큐리티는 인터셉터를 사용 함      -->
        <security:intercept-url pattern="/common/*" access="permitAll()"/>
        <security:intercept-url pattern="/member/*" access="hasRole('ROLE_MEMBER')"/>
        <security:intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMIN')"/>
        <!-- 로그인 페이지 기본 값. 시큐리티가 설정해준 기본 페이지로 이동해줌
        <security:form-login /> -->
        <security:form-login login-page="/common/login"/>

        <security:logout logout-url="/logout" invalidate-session="true" delete-cookies="JSESSION_ID" logout-success-url="/common/main"/>

     </security:http>

    <security:authentication-manager>
    </security:authentication-manager>

</beans>